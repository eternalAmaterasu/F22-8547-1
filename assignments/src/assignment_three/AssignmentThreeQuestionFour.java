package assignment_three;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

/**
* The AssignmentThreeQuestionFour program implements search index
* using String Matching.
*
* @author  Sila Gopal Aneesh
* @version 1.0
* @since   2022-11-28
*/

public class AssignmentThreeQuestionFour {
	
	public static void main (String args[]) throws IOException
	{
		
	int wordRank =0;
	TreeMap<Integer, String> pageRankBasedOnInput = new TreeMap<Integer, String>();  // we are using treemap so that the values should be sorted

	// Initialize Scanner Object to get input from user.
	Scanner sc = new Scanner(System.in);
	
	System.out.println("Enter Input Word to search in web pages");                              
	String inputKey = sc.next();
	   
	File webPageLocation = new File("assignments/res/W3C_Web_Pages");

	File[] listOfFiles = webPageLocation.listFiles();
			//Loop through the folder to get all the web pages.
	        for (File file : listOfFiles) {
	        	
			        if(!file.isDirectory()) {
			        	
			        	String absolutePathOfWebPage = file.getAbsolutePath();
				       
			        	String pageSource = parseData(absolutePathOfWebPage);
			        	
			        	//Call pageRankBasedOnFrequencyOfInput function which uses string Matching to calculate page rank.
				        wordRank = pageRankBasedOnFrequencyOfInput(inputKey,pageSource);
				        
				        // Add rank of word and path of web page to treemap.
				        pageRankBasedOnInput.put(wordRank, absolutePathOfWebPage);
			        
			        }
	       
	        }
	        
	        //print the Output, which includes the rank of input and file path of webpage.
	        for (Map.Entry<Integer, String> entry : pageRankBasedOnInput.entrySet())
	        System.out.println("[" + entry.getKey() + ", " + entry.getValue() + "]");
	       
	}
	
	// Function which includes the logic to String match rank the web page based on frequency.
	public static int pageRankBasedOnFrequencyOfInput(String input, String parsedData) {
		
		  int count =0;
	      int keyLength = input.length();
	      int weblen = parsedData.length();
	      int i=0;
	      
	      while(i <= weblen - keyLength) {
	    	  
			int j=0;
			
			while(j<keyLength && (input.charAt(j) == parsedData.charAt(i+j))) {
				j++;
			}
			
			if(j==keyLength) {
				count++;
			}
			
			i++;
	         
	      }
	      return count;

	  }
	
	//Function to parse each of the web pages using jsoup framework.
	public static String parseData(String inputWebPageLocation) throws IOException
	    {		
		
			//FileReader package reads data from files.
			FileReader fileReader=new FileReader(inputWebPageLocation);  
			     
			 //convert to strings
			 StringBuffer stringBuffer=new StringBuffer();  
			 String line;
			 
			 //Buffered Reader is used to read characters in a file
			 BufferedReader bufferedReader=new BufferedReader(fileReader);
			 
			 while((line=bufferedReader.readLine())!=null)  
			{  
			  stringBuffer.append(line);      
			  stringBuffer.append("\n");      
			}
			 
			fileReader.close();
			
			// Here, the string generated by StringBuffer is parsed using jsoup library.
			Document parsedDataFromjsoup = Jsoup.parse(stringBuffer.toString());
			String parsedWebPageData = parsedDataFromjsoup.wholeText();
			   
			return parsedWebPageData;
			 
	    }

}
